// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./lorekit.db"
}


model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String   
  createdAt  DateTime @default(now())

  worlds     UserWorld[]
}

model UserWorld {
  id          String @id @default(uuid())
  accessLevel  Int
  
  user        User @relation(fields: [userId], references: [id])
  userId      String 

  world       World @relation(fields: [worldId], references: [id])
  worldId     String
}

model World {
  id          String      @id @default(uuid())
  name        String
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  users       UserWorld[]
  characters  Character[]
  locations   Location[]
  items       Item[]
}

model Character {
  id           String   @id @default(uuid())
  name         String
  description  String
  personality  String

  world        World?    @relation(fields: [worldId], references: [id])
  worldId      String?
}

model Location {
  id              String     @id @default(uuid())
  name            String
  description     String
  type            String?

  world           World?      @relation(fields: [worldId], references: [id])
  worldId         String?

  parentLocation  Location?  @relation("LocationHierarchy", fields: [parentLocationId], references: [id])
  parentLocationId String?   

  subLocations     Location[] @relation("LocationHierarchy")
}

model Item {
  id          String   @id @default(uuid())
  name        String
  description String

  world       World?    @relation(fields: [worldId], references: [id])
  worldId     String?
}

model Document {
  id          String   @id @default(uuid())
  title       String
  content     String
  type        String?
  entityTable String
  entityId    String
}

model Personalization {
  id            String @id @default(uuid())
  entityTable   String
  entityId      String
  contentJson   String
}